from marshmallow import fields

from ....messaging.models.base import Schema
from ....messaging.valid import (
    CREDENTIAL_CONTEXT,
    CREDENTIAL_TYPE,
    CREDENTIAL_SUBJECT,
    DIDKey,
    DID_KEY,
    INDY_ISO8601_DATETIME,
    URI,
    UUIDFour,
)


class LDSignatureSchema(Schema):
    type = fields.Str(
        required=True,
        description="Identifies the digital signature suite that was used to create the signature",
        example="Ed25519Signature2018",
    )

    proof_purpose = fields.Str(
        data_key="proofPurpose",
        required=True,
        description="",
        example="assertionMethod",
    )

    verification_method = fields.Str(
        data_key="verificationMethod",
        required=True,
        description="Information used for proof verification",
        example="did:key:z6Mkgg342Ycpuk263R9d8Aq6MUaxPn1DDeHyGo38EefXmgDL#z6Mkgg342Ycpuk263R9d8Aq6MUaxPn1DDeHyGo38EefXmgDL",
        validate=URI(),
    )

    created = fields.Str(
        required=True,
        description="The string value of an ISO8601 combined date and time string generated by the Signature Algorithm",
        **INDY_ISO8601_DATETIME,
    )

    domain = fields.Str(
        required=False,
        description="A string value specifying the restricted domain of the signature.",
        example="example.com",
    )

    challenge = fields.Str(
        required=False,
        description="Associates a challenge with a proof, for use with a proofPurpose such as authentication",
        example=UUIDFour.EXAMPLE,
    )

    jws = fields.Str(
        required=False,
        description="Associates a Detached Json Web Signature with a proof",
        example="eyJhbGciOiAiRWREU0EiLCAiYjY0IjogZmFsc2UsICJjcml0IjogWyJiNjQiXX0..lKJU0Df_keblRKhZAS9Qq6zybm-HqUXNVZ8vgEPNTAjQKBhQDxvXNo7nvtUBb_Eq1Ch6YBKY7UBAjg6iBX5qBQ",
    )

    proofValue = fields.Str(
        required=False,
        description="The proof value of a proof",
        example="z76WGJzY2rXtSiZ8BDwU4VgcLqcMEm2dXdgVVS1QCZQUptZ5P8n5YCcnbuMUASYhVNihae7m8VeYvfViYf2KqTMVEH1BKNF6Xc5S2kPpBwsNos6egnrmDMxhtQppZjb47Mi2xG89jZm654uZUatDvfTCoDWuethfRHPSk81qn6od9zGxBxxAYyUPnY9Fs9QEQETm53AN9uk6erSAhJ2R3K8rosrBkSZbVhbzUJTPg22wpddVY8Xu3vhRVNpzyUvCEedg5EM6i7wE4G1CYsz7tbaApEF9aFRB92v4DoiY5GXGjwH5PhhGstJB9ySh9FyDfSYN8qRVVR7i5No2eBi3AjQ7cqaBiWkoSrCoQK7jJ4PyFsu3ZaAuUx8LAtkhaChmwfxH8E25LcTENJhFxqVnPd7f7Q3cUrFciYRqmg8eJsy1AahqbzJQ63n9RtekmwzqnMYrTwft6cLJJGeTSSxCCJ6HKnRtwE7jjDh6sB2ZeVj494VppdAVJBz2AAiZY9BBnCD8wUVgwqH3qchGRCuC2RugA4eQ9fUrR4Yuycac3caiaaay",
    )


class LDCredentialSchema(Schema):
    context = fields.List(
        # TODO: can be Str or Dict (wait for PE type)
        fields.Str(),
        data_key="@context",
        required=True,
        description="The JSON-LD context of the credential",
        **CREDENTIAL_CONTEXT,
    )
    id = fields.Str(
        required=False,
        desscription="The ID of the credential",
        example="http://example.edu/credentials/1872",
        validate=URI(),
    )
    type = fields.List(
        fields.Str(),
        required=True,
        description="The JSON-LD type of the credential",
        **CREDENTIAL_TYPE,
    )
    # TODO: can be Str or Dict (wait for PE type)
    issuer = fields.Str(
        required=False,
        description="The JSON-LD Verifiable Credential Issuer",
        example=DIDKey.EXAMPLE,
    )
    # TODO: Check for RFC3339 format
    issuance_date = fields.Str(
        data_key="issuanceDate",
        required=False,
        description="The issuance date",
        example="2010-01-01T19:73:24Z",
    )
    # TODO: Check for RFC3339 format
    expiration_date = fields.Str(
        data_key="expirationDate",
        required=False,
        description="The expiration date",
        example="2010-01-01T19:73:24Z",
    )
    # TODO: Can be List or Dict
    credential_subject = fields.Dict(
        required=True,
        keys=fields.Str(),
        data_key="credentialSubject",
        **CREDENTIAL_SUBJECT,
    )
    # TODO: Add extra fields


class LDVerifiableCredentialSchema(LDCredentialSchema):
    proof = fields.Nested(
        LDSignatureSchema,
        required=True,
        description="The proof of the credential",
        example={
            "type": "Ed25519Signature2018",
            "verificationMethod": "did:key:z6Mkgg342Ycpuk263R9d8Aq6MUaxPn1DDeHyGo38EefXmgDL#z6Mkgg342Ycpuk263R9d8Aq6MUaxPn1DDeHyGo38EefXmgDL",
            "created": "2019-12-11T03:50:55",
            "proofPurpose": "assertionMethod",
            "jws": "eyJhbGciOiAiRWREU0EiLCAiYjY0IjogZmFsc2UsICJjcml0IjogWyJiNjQiXX0..lKJU0Df_keblRKhZAS9Qq6zybm-HqUXNVZ8vgEPNTAjQKBhQDxvXNo7nvtUBb_Eq1Ch6YBKY7UBAjg6iBX5qBQ",
        },
    )
