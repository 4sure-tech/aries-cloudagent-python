ARG python_version=3.6.13
ARG rust_version=1.46
FROM rust:${rust_version}-slim-buster as builder

ARG user=indy
ENV HOME="/home/$user"
WORKDIR $HOME
RUN mkdir -p .local/bin .local/etc .local/lib

# Install environment
RUN apt-get update -y && \
    apt-get install -y --no-install-recommends \
    automake \
    build-essential \
    ca-certificates \
    cmake \
    curl \
    git \
    libbz2-dev \
    libffi-dev \
    libgmp-dev \
    liblzma-dev \
    libncurses5-dev \
    libncursesw5-dev \
    libsecp256k1-dev \
    libsodium-dev \
    libsqlite3-dev \
    libssl-dev \
    libtool \
    libzmq3-dev \
    pkg-config \
    zlib1g-dev && \
    rm -rf /var/lib/apt/lists/*

# set to --release for smaller, optimized library
ARG indy_build_flags=--release

ARG indy_sdk_url

# make local libs and binaries accessible
ENV PATH="$HOME/.local/bin:$PATH"
ENV LIBRARY_PATH="$HOME/.local/lib:$LIBRARY_PATH"

# Download and extract indy-sdk
RUN mkdir indy-sdk && \
    curl "${indy_sdk_url}" | tar -xz -C indy-sdk

# Build and install indy-sdk
WORKDIR $HOME/indy-sdk
RUN cd indy-sdk*/libindy && \
    cargo build ${indy_build_flags} && \
    cp target/*/libindy.so "$HOME/.local/lib" && \
    cargo clean

# Package python3-indy
RUN tar czvf ../python3-indy.tgz -C indy-sdk*/wrappers/python .

# grab the latest sdk code for the postgres plug-in
WORKDIR $HOME
ARG indy_postgres_url=${indy_sdk_url}
RUN mkdir indy-postgres && \
    curl "${indy_postgres_url}" | tar -xz -C indy-postgres

# Build and install postgres_storage plugin
WORKDIR $HOME/indy-postgres
RUN cd indy-sdk*/experimental/plugins/postgres_storage && \
    cargo build ${indy_build_flags} && \
    cp target/*/libindystrgpostgres.so "$HOME/.local/lib" && \
    cargo clean

# Clean up SDK
WORKDIR $HOME
RUN rm -rf indy-sdk indy-postgres

## Start fresh (new image) ##
FROM python:${python_version}-slim-buster


ARG uid=1001
ARG user=indy
ARG indy_version

ENV HOME="/home/$user" \
    APP_ROOT="$HOME" \
    LC_ALL=C.UTF-8 \
    LANG=C.UTF-8 \
    PIP_NO_CACHE_DIR=off \
    PYTHONUNBUFFERED=1 \
    PYTHONIOENCODING=UTF-8 \
    RUST_LOG=warning \
    SHELL=/bin/bash \
    SUMMARY="indy-python base image" \
    DESCRIPTION="aries-cloudagent provides a base image for running Hyperledger Aries agents in Docker. \
    This image provides all the necessary dependencies to use the indy-sdk in python. Based on Debian Buster."

LABEL summary="$SUMMARY" \
    description="$DESCRIPTION" \
    io.k8s.description="$DESCRIPTION" \
    io.k8s.display-name="indy-python $indy_version" \
    name="indy-python" \
    version="$indy_version" \
    maintainer=""

# Add indy user
RUN useradd -U -ms /bin/bash -u $uid $user

# Install environment
RUN apt-get update -y && \
    apt-get install -y --no-install-recommends \
    apt-transport-https \
    ca-certificates \
    bzip2 \
    curl \
    git \
    less \
    libffi6 \
    libgmp10 \
    liblzma5 \
    libncurses5 \
    libncursesw5 \
    libsecp256k1-0 \
    libzmq5 \
    net-tools \
    openssl \
    sqlite3 \
    vim-tiny \
    zlib1g && \
    rm -rf /var/lib/apt/lists/* /usr/share/doc/*

WORKDIR $HOME

# Copy build results
COPY --from=builder --chown=$user:$user $HOME .

RUN mkdir -p $HOME/.local/bin

# Add local binaries and aliases to path
ENV PATH="$HOME/.local/bin:$PATH"

# Make libraries resolvable by python
ENV LD_LIBRARY_PATH="$HOME/.local/lib:$LD_LIBRARY_PATH"
RUN echo "$HOME/.local/lib" > /etc/ld.so.conf.d/local.conf && ldconfig

# Install python3-indy
RUN pip install --no-cache-dir python3-indy.tgz && rm python3-indy.tgz

# - In order to drop the root user, we have to make some directories writable
#   to the root group as OpenShift default security model is to run the container
#   under random UID.
RUN usermod -a -G 0 $user

# Create standard directories to allow volume mounting and set permissions
# Note: PIP_NO_CACHE_DIR environment variable should be cleared to allow caching
RUN mkdir -p \
    $HOME/.cache/pip/http \
    $HOME/.indy-cli/networks \
    $HOME/.indy_client/wallet \
    $HOME/.indy_client/pool \
    $HOME/.indy_client/ledger-cache \
    $HOME/ledger/sandbox/data \
    $HOME/log

# The root group needs access the directories under $HOME/.indy_client for the container to function in OpenShift.
# Also ensure the permissions on the python 'site-packages' folder are set correctly.
RUN chown -R $user:root $HOME/.indy_client \
    && chmod -R ug+rw $HOME/log $HOME/ledger $HOME/.cache $HOME/.indy_client

USER $user

CMD ["bash"]
